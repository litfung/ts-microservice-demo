version: '2'
services:
  postgres:
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456
    ports:
      - '5433:5432'
    volumes:
      - postgres:/var/lib/postgresql/data
  mongodb:
    image: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongodb:/data/db
  redis:
    image: redis
    ports: 
      - '6379:6379'

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    expose:
      - '9093'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

    links:
      - zookeeper
    depends_on:
      - zookeeper
    # volumes:
    #   - /var/run/docker.sock:/var/run/docker.sock
  webview:
    image: sourcelaborg/kafka-webview
    expose:
      - 8080
    ports:
      - '3331:8080'
    links:
      - kafka

  api-auth:
    build:
      context: ../../
      dockerfile: apis/api-auth/Dockerfile
    environment: 
      - JWT_SECRETKEY=secretkey
    ports:
      - '8000:8000'
    links:
      - service-user

  api-app:
    build:
      context: ../../
      dockerfile: apis/api-app/Dockerfile
    ports:
      - '8001:8001'
    links:
      - api-auth
      - service-user

  api-admin:
    build:
      context: ../../
      dockerfile: apis/api-auth/Dockerfile
    ports:
      - '8002:8002'
    links:
      - api-auth
      - service-user

  service-user:
    build:
      context: ../../
      dockerfile: services/service-user/Dockerfile
    expose: 
      - 3000
    links:
      - postgres
      - redis
      - kafka
  
  listener-user:
    build:
      context: ../../
      dockerfile: listeners/listener-user/Dockerfile
    links:
      - kafka
      - service-user

  scheduler:
    build:
      context: ../../
      dockerfile: scheduler/Dockerfile
    ports:
      - '8003:8003'
    links:
      - mongodb

  worker-user:
    build:
      context: ../../
      dockerfile: workers/worker-user/Dockerfile
    links:
      - mongodb
      - service-user
volumes:
  postgres:
  mongodb:
